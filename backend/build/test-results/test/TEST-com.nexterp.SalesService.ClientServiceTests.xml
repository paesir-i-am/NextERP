<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.nexterp.SalesService.ClientServiceTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2025-01-19T12:20:55" hostname="LAPTOP-V0HA9BCG" time="1.457">
  <properties/>
  <testcase name="testFindClientByEmployeeName()" classname="com.nexterp.SalesService.ClientServiceTests" time="1.457"/>
  <system-out><![CDATA[21:20:23.760 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.nexterp.SalesService.ClientServiceTests]: ClientServiceTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
21:20:24.259 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.nexterp.NextErpApplication for test class com.nexterp.SalesService.ClientServiceTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.0)

2025-01-19T21:20:26.861+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : Starting ClientServiceTests using Java 17.0.12 with PID 24852 (started by user in C:\Users\user\NextERP\backend)
2025-01-19T21:20:26.866+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : No active profile set, falling back to 1 default profile: "default"
2025-01-19T21:20:30.728+09:00  INFO 24852 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-01-19T21:20:31.463+09:00  INFO 24852 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 682 ms. Found 15 JPA repository interfaces.
2025-01-19T21:20:34.628+09:00  INFO 24852 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-01-19T21:20:34.945+09:00  INFO 24852 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.2.Final
2025-01-19T21:20:34.954+09:00  INFO 24852 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2025-01-19T21:20:35.712+09:00  INFO 24852 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-01-19T21:20:36.493+09:00  INFO 24852 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-01-19T21:20:36.590+09:00  INFO 24852 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-01-19T21:20:37.144+09:00  INFO 24852 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.mariadb.jdbc.Connection@5a1a20ae
2025-01-19T21:20:37.153+09:00  INFO 24852 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-01-19T21:20:37.356+09:00  INFO 24852 --- [    Test worker] org.hibernate.orm.dialect                : HHH035001: Using dialect: org.hibernate.dialect.MariaDBDialect, version: 11.5
2025-01-19T21:20:39.155+09:00  INFO 24852 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-01-19T21:20:43.077+09:00  INFO 24852 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    alter table if exists accounts 
       modify column created_at  datetime(6)
Hibernate: 
    alter table if exists accounts 
       modify column type  enum ('ASSET','EQUITY','EXPENSE','LIABILITY','REVENUE') not null
Hibernate: 
    alter table if exists accounts 
       modify column updated_at  datetime(6)
Hibernate: 
    alter table if exists announcement 
       modify column content  TEXT not null
Hibernate: 
    alter table if exists announcement 
       modify column created_at  datetime(6) not null
Hibernate: 
    alter table if exists announcement 
       modify column updated_at  datetime(6)
Hibernate: 
    alter table if exists announcement 
       modify column author_id  integer not null
Hibernate: 
    alter table if exists attendance 
       modify column check_in_time  time(6)
Hibernate: 
    alter table if exists attendance 
       modify column check_out_time  time(6)
Hibernate: 
    alter table if exists attendance 
       modify column status  enum ('LATE','LEAVE','ON_TIME','REMOTE_WORK','SICK_LEAVE') not null
Hibernate: 
    alter table if exists attendance 
       modify column employee_id  integer
Hibernate: 
    alter table if exists client 
       modify column created_date  DATETIME not null
Hibernate: 
    alter table if exists client 
       modify column employee_id  integer not null
Hibernate: 
    alter table if exists employee 
       modify column employee_id  integer not null
Hibernate: 
    alter table if exists employee 
       modify column address  TEXT
Hibernate: 
    alter table if exists invoice_items 
       modify column created_at  datetime(6)
Hibernate: 
    alter table if exists invoice_items 
       modify column updated_at  datetime(6)
Hibernate: 
    alter table if exists invoices 
       modify column created_at  datetime(6)
Hibernate: 
    alter table if exists invoices 
       modify column date  datetime(6) not null
Hibernate: 
    alter table if exists invoices 
       modify column updated_at  datetime(6)
Hibernate: 
    alter table if exists journal_entries 
       modify column created_at  datetime(6)
Hibernate: 
    alter table if exists journal_entries 
       modify column updated_at  datetime(6)
Hibernate: 
    alter table if exists member 
       modify column employee_id  integer not null
Hibernate: 
    alter table if exists reports 
       modify column created_at  datetime(6)
Hibernate: 
    alter table if exists reports 
       modify column period_end  datetime(6) not null
Hibernate: 
    alter table if exists reports 
       modify column period_start  datetime(6) not null
Hibernate: 
    alter table if exists reports 
       modify column type  enum ('BALANCE_SHEET','CASH_FLOW','INCOME_STATEMENT') not null
Hibernate: 
    alter table if exists reports 
       modify column updated_at  datetime(6)
Hibernate: 
    alter table if exists request 
       modify column category  enum ('CLIENT','CONTRACT','ORDER','PRODUCT') not null
Hibernate: 
    alter table if exists request 
       modify column last_updated  datetime(6)
Hibernate: 
    alter table if exists request 
       modify column status  enum ('APPROVED','HOLD','REJECTED') not null
Hibernate: 
    alter table if exists request 
       modify column approver_id  integer
Hibernate: 
    alter table if exists request 
       modify column requester_id  integer not null
Hibernate: 
    alter table if exists transactions 
       modify column created_at  datetime(6)
Hibernate: 
    alter table if exists transactions 
       modify column date  datetime(6) not null
Hibernate: 
    alter table if exists transactions 
       modify column type  enum ('EXPENSE','OTHER','PURCHASE','REFUND','SALE','TRANSFER') not null
Hibernate: 
    alter table if exists transactions 
       modify column updated_at  datetime(6)
Hibernate: 
    alter table if exists vat 
       modify column created_at  datetime(6)
Hibernate: 
    alter table if exists vat 
       modify column updated_at  datetime(6)
2025-01-19T21:20:43.726+09:00  INFO 24852 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-01-19T21:20:45.449+09:00  INFO 24852 --- [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-01-19T21:20:48.215+09:00  WARN 24852 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-01-19T21:20:48.538+09:00  INFO 24852 --- [    Test worker] c.n.common.config.CustomSecurityConfig   : ---------------------security config---------------------------
2025-01-19T21:20:53.200+09:00  INFO 24852 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@10982760, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50626d22, org.springframework.security.web.context.SecurityContextHolderFilter@5dd2e62a, org.springframework.security.web.header.HeaderWriterFilter@5b344510, org.springframework.web.filter.CorsFilter@7cc742d, org.springframework.security.web.authentication.logout.LogoutFilter@424632a, com.nexterp.common.security.filter.JWTCheckFilter@734db023, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@647dcc5e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1030ce34, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74c3374f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22bf2a0d, org.springframework.security.web.session.SessionManagementFilter@21fbfdd5, org.springframework.security.web.access.ExceptionTranslationFilter@5344b208, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2381a837]
2025-01-19T21:20:54.734+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : Started ClientServiceTests in 28.954 seconds (process running for 36.833)
Hibernate: 
    select
        d1_0.department_id,
        d1_0.contact_email,
        d1_0.name 
    from
        department d1_0
Hibernate: 
    select
        d1_0.department_id,
        d1_0.contact_email,
        d1_0.name 
    from
        department d1_0
Hibernate: 
    select
        d1_0.department_id,
        d1_0.contact_email,
        d1_0.name 
    from
        department d1_0
Hibernate: 
    select
        p1_0.position_id,
        p1_0.role,
        p1_0.title 
    from
        positions p1_0
Hibernate: 
    select
        p1_0.position_id,
        p1_0.role,
        p1_0.title 
    from
        positions p1_0
Hibernate: 
    select
        p1_0.position_id,
        p1_0.role,
        p1_0.title 
    from
        positions p1_0
Hibernate: 
    select
        p1_0.position_id,
        p1_0.role,
        p1_0.title 
    from
        positions p1_0
Hibernate: 
    select
        p1_0.position_id,
        p1_0.role,
        p1_0.title 
    from
        positions p1_0
Hibernate: 
    select
        d1_0.department_id,
        d1_0.contact_email,
        d1_0.name 
    from
        department d1_0 
    where
        d1_0.department_id=?
Hibernate: 
    select
        p1_0.position_id,
        p1_0.role,
        p1_0.title 
    from
        positions p1_0 
    where
        p1_0.position_id=?
Hibernate: 
    select
        e1_0.employee_id,
        e1_0.address,
        e1_0.birth_date,
        d1_0.department_id,
        d1_0.contact_email,
        d1_0.name,
        e1_0.email,
        e1_0.gender,
        e1_0.hire_date,
        e1_0.name,
        e1_0.phone,
        p1_0.position_id,
        p1_0.role,
        p1_0.title,
        e1_0.termination_date 
    from
        employee e1_0 
    left join
        department d1_0 
            on d1_0.department_id=e1_0.department_id 
    left join
        positions p1_0 
            on p1_0.position_id=e1_0.position_id 
    where
        e1_0.employee_id=?
Hibernate: 
    select
        m1_0.employee_id,
        m1_0.is_initial_password,
        m1_0.password 
    from
        member m1_0 
    where
        m1_0.employee_id=?
Hibernate: 
    select
        a1_0.code,
        a1_0.balance,
        a1_0.created_at,
        a1_0.description,
        a1_0.name,
        a1_0.parent_code,
        a1_0.type,
        a1_0.updated_at 
    from
        accounts a1_0 limit ?,
        ?
Hibernate: 
    select
        count(a1_0.code) 
    from
        accounts a1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.account_number,
        c1_0.business_code,
        c1_0.business_name,
        c1_0.business_type,
        c1_0.client_address,
        c1_0.client_bank,
        c1_0.client_email,
        c1_0.client_owner,
        c1_0.client_phone,
        c1_0.created_date,
        c1_0.employee_id,
        c1_0.memo,
        c1_0.registration_number,
        c1_0.zip_code 
    from
        client c1_0 
    left join
        employee e1_0 
            on e1_0.employee_id=c1_0.employee_id 
    where
        e1_0.name like ? escape '\\'
Hibernate: 
    select
        e1_0.employee_id,
        e1_0.address,
        e1_0.birth_date,
        d1_0.department_id,
        d1_0.contact_email,
        d1_0.name,
        e1_0.email,
        e1_0.gender,
        e1_0.hire_date,
        e1_0.name,
        e1_0.phone,
        p1_0.position_id,
        p1_0.role,
        p1_0.title,
        e1_0.termination_date 
    from
        employee e1_0 
    left join
        department d1_0 
            on d1_0.department_id=e1_0.department_id 
    left join
        positions p1_0 
            on p1_0.position_id=e1_0.position_id 
    where
        e1_0.employee_id=?
2025-01-19T21:20:56.829+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : 검색된 거래처명: Test Business1, 담당자 이름: 관리자, 전화번호: null
2025-01-19T21:20:56.830+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : 검색된 거래처명: Test Business4, 담당자 이름: 관리자, 전화번호: null
2025-01-19T21:20:56.831+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : 검색된 거래처명: Test Business6, 담당자 이름: 관리자, 전화번호: null
2025-01-19T21:20:56.831+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : 검색된 거래처명: Test Business7, 담당자 이름: 관리자, 전화번호: null
2025-01-19T21:20:56.832+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : 검색된 거래처명: Test Business8, 담당자 이름: 관리자, 전화번호: null
2025-01-19T21:20:56.832+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : 검색된 거래처명: Test Business13, 담당자 이름: 관리자, 전화번호: null
2025-01-19T21:20:56.833+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : 검색된 거래처명: Test Business15, 담당자 이름: 관리자, 전화번호: null
2025-01-19T21:20:56.835+09:00  INFO 24852 --- [    Test worker] c.n.SalesService.ClientServiceTests      : 검색된 거래처 수: 7
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
